name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger only on push to main branch
 
jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Check out the repository
      - name: Checkout the repository
        uses: actions/checkout@v2

      # Set up SSH keys for server access
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      # Deploy Application
      - name: Deploy Application
        run: |
          ssh -T root@${{ secrets.SERVER_IP }} << 'EOF'
            # Check if the repo exists by looking for .git
            if [ ! -d "/home/root/chainportal/srv/.git" ]; then
              echo "Repository doesn't exist. Cleaning folder and cloning..."
              rm -rf /home/root/chainportal/srv/* # Remove all files if no .git exists
              git clone git@github.com:davidkakov111/ChainPortalSrv.git /home/root/chainportal/srv
            else
              echo "Repository exists. Pulling latest changes..."
              cd /home/root/chainportal/srv && git pull origin main
            fi
            
            # Navigate to repo directory
            cd /home/root/chainportal/srv
            
            # Remove existing .env and upload the new one
            rm -f .env
          EOF
          
      - name: Transfer .env file
        run: |
          echo "${{ secrets.ENV_FILE_CONTENT }}" > .env
          scp .env root@${{ secrets.SERVER_IP }}:/home/root/chainportal/srv/.env

      - name: Start Docker
        run: |
          ssh -T root@${{ secrets.SERVER_IP }} << 'EOF'
            # Navigate to repo directory and run deployment commands
            cd /home/root/chainportal/srv
            docker compose down
            docker compose up -d --build
          EOF
